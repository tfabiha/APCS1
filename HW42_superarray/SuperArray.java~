// Tabassum Fabiha
// APCS1 pd2
// HW42 -- Array of Grade 316
// 2017-11-29

/***************************
 * class SuperArray
 * Wrapper class for array. Facilitates resizing,
 * getting and setting element values.
 ***************************/

public class SuperArray {

  private int[] _data;  //underlying container
  private int _size;    //number of elements in this SuperArray


  //default constructor â€“ initializes 10-item array
  public SuperArray() {
      _data = new int[10];
      _size = 0;
  }


  //output SuperArray in [a,b,c] format
  public String toString() {
      String retStr = "[";

      // adds to retStr all the elements of _data
      for (int x = 0; x < _size; x++) {
	  retStr += _data[x] + ",";
      }
      
      if (retStr.length() > 1) {
	  retStr = retStr.substring(0, retStr.length() - 1);
      }
      retStr += "]";

      return retStr;
  }


  //double capacity of SuperArray
  private void expand() {
      // initializes a new array with double the size of _data
      int[] n = new int[_data.length * 2];

      // inputs all the elements of _data into n
      for (int x = 0; x < _size; x++) {
	  n[x] = _data[x];
      }

      _data = n; // sets the location of _data to that of n
  }


  //accessor -- return value at specified index
  public int get( int index ) {
      return _data[index];
  }


  //mutator -- set value at index to newVal,
  //           return old value at index
  public int set( int index, int newVal ) {
      if (index >= _size) {
	  add(newVal);
	  return 0;
      }
      int oldVal = _data[index];
      _data[index] = newVal;

      return oldVal;
  }

    // expands _data if it is needed
    public void expIfNeed() {
	if (_size == _data.length) {
	    expand();
	}
    }
   //adds an item after the last item
  public void add( int newVal ) {
      expIfNeed();

      _data[_size] = newVal;
      _size += 1;
  }


  //inserts an item at index
  public void add( int index, int newVal ) {
      expIfNeed();

      for (int x = _size; x > index; x--) {
	  _data[x] = _data[x-1];
      }

      _data[index] = newVal;
      _size += 1;
  }


  //removes the item at index
  //shifts elements left to fill in newly-empted slot
  public void remove( int index ) {
      for (int x = index; x < _size; x++) {
	  _data[x] = _data[x+1];
      }

      _size -= 1;
  }


  //return number of meaningful items in _data
  public int size() {
      return _size;
  }



  //main method for testing
  public static void main( String[] args ) {
    
    SuperArray curtis = new SuperArray();
    System.out.println( "Printing empty SuperArray curtis..." );
    System.out.println( curtis );
    
    for( int i = 0; i < curtis._data.length; i++ ) {
      curtis.set( i, i * 2 );
    }
    
    System.out.println("Printing populated SuperArray curtis...");
    System.out.println(curtis);

    for( int i = 0; i < 3; i++ ) {
      curtis.expand();
      System.out.println("Printing expanded SuperArray curtis...");
      System.out.println(curtis);
      System.out.println("new length of underlying array: "
                         + curtis._data.length );
    }

    SuperArray mayfield = new SuperArray();
    System.out.println("Printing empty SuperArray mayfield...");
    System.out.println(mayfield);

    mayfield.add(5);
    mayfield.add(4);
    mayfield.add(3);
    mayfield.add(2);
    mayfield.add(1);

    System.out.println("Printing populated SuperArray mayfield...");
    System.out.println(mayfield);

    mayfield.remove(3);
    System.out.println("Printing SuperArray mayfield post-remove...");
    System.out.println(mayfield);
    mayfield.remove(3);
    System.out.println("Printing SuperArray mayfield post-remove...");
    System.out.println(mayfield);

    mayfield.add(3,99);
    System.out.println("Printing SuperArray mayfield post-insert...");
    System.out.println(mayfield);
    mayfield.add(2,88);
    System.out.println("Printing SuperArray mayfield post-insert...");
    System.out.println(mayfield);
    mayfield.add(1,77);
    System.out.println("Printing SuperArray mayfield post-insert...");
    System.out.println(mayfield);
/*~~~~~~~~move~me~down~~~~~~~~~~~~~~V~~~~~~~~
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|~~~~~~~~*/
  }//end main()


}//end class
